# .github/workflows/ci.yml

# Continuous Integration (CI) Workflow
name: ci
'on':
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: npm
      - name: Install node dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint
  dockerfile-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: Dockerfile
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: npm
      - name: Install node dependencies and run Tests
        run: npm install-ci-test
  docker-hub:
    name: Build and Push to Docker Hub
    needs:
      - lint
      - dockerfile-lint
      - unit-tests
      - integration-tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: '${{ secrets.DOCKERHUB_USERNAME }}'
          password: '${{ secrets.DOCKERHUB_TOKEN }}'
      - name: Build and push
        env:
          DOCKERHUB_REPO: jaanjaved/fragments
          SHA_TAG: 'sha-${{ github.sha }}'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: >-
            ${{ env.DOCKERHUB_REPO }}:${{ env.SHA_TAG }}, ${{ env.DOCKERHUB_REPO
            }}:main, ${{ env.DOCKERHUB_REPO }}:latest
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm
      - name: Install node dependencies
        run: npm install
      - name: Build Containers
        run: docker-compose up -d
      - name: Setup Local AWS Resources
        run: chmod +x ./scripts/local-aws-setup.sh
        run: ./scripts/local-aws-setup.sh
      - name: Run Hurl Tests
        run: 'npm run test:integration'
